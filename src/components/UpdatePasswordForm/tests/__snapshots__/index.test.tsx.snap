// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`UpdatePasswordForm rendering should render correctly 1`] = `
<View
  onLayout={[Function]}
  style={
    Array [
      Object {
        "alignItems": "center",
        "flex": 1,
        "justifyContent": "center",
        "padding": 20,
      },
      Object {
        "paddingBottom": 0,
      },
    ]
  }
  testID="UpdatePasswordForm"
>
  <View
    style={
      Object {
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "marginBottom": 14,
        }
      }
    >
      <View
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#EEEEEE",
            "bottom": 0,
            "height": 50,
            "justifyContent": "center",
            "position": "absolute",
            "right": 4,
            "width": 50,
            "zIndex": 1,
          }
        }
        testID="InputGroup-View-right-element-container"
      >
        <View
          accessible={true}
          clickable={true}
          hitSlop={
            Object {
              "bottom": 10,
              "left": 10,
              "right": 10,
              "top": 10,
            }
          }
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID="InputGroupPassword-TouchableOpacity-toggle-password-visible"
        >
          <Text
            allowFontScaling={false}
            style={
              Array [
                Object {
                  "color": "black",
                  "fontSize": 20,
                },
                Object {
                  "height": 20,
                  "width": 20,
                },
                Object {
                  "fontFamily": "Feather",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
                Object {},
              ]
            }
            testID="InputGroupPassword-TouchableOpacity-toggle-password-visible-icon"
          >
            ÔÖù
          </Text>
        </View>
      </View>
      <Text
        style={
          Array [
            Object {
              "color": "#000000",
              "fontFamily": "Inter-SemiBold",
              "fontSize": 15,
              "lineHeight": 23,
            },
            Object {
              "marginBottom": 4,
            },
          ]
        }
        testID="InputGroup-Text-label"
      >
        Your new password
      </Text>
      <TextInput
        autoCapitalize="none"
        autoFocus={false}
        blurOnSubmit={false}
        clearButtonMode="always"
        editable={true}
        onChangeText={[Function]}
        onSubmitEditing={[Function]}
        placeholder="Your new super secret password"
        returnKeyType="done"
        secureTextEntry={true}
        style={
          Object {
            "alignItems": "center",
            "backgroundColor": "#EEEEEE",
            "borderRadius": 6,
            "fontFamily": "Inter-Regular",
            "fontSize": 15,
            "height": 50,
            "lineHeight": undefined,
            "paddingLeft": 14,
            "paddingRight": 14,
          }
        }
        testID="UpdatePasswordForm-TextInput-password"
        textContentType="password"
        value=""
      />
    </View>
    <View>
      <View
        style={
          Object {
            "borderRadius": 3,
          }
        }
      >
        <View
          accessible={true}
          clickable={true}
          isTVSelectable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID="UpdatePasswordForm-Button-update"
        >
          <View
            style={
              Object {
                "alignItems": "center",
                "backgroundColor": "#2089dc",
                "borderColor": "#2089dc",
                "borderRadius": 3,
                "borderWidth": 0,
                "flexDirection": "row",
                "justifyContent": "center",
                "padding": 8,
              }
            }
          >
            <Text
              style={
                Object {
                  "color": "white",
                  "fontSize": 18,
                  "paddingBottom": 1,
                  "paddingTop": 2,
                  "textAlign": "center",
                }
              }
            >
              Save new password
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
